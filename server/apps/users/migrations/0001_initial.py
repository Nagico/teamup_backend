# Generated by Django 4.2 on 2023-04-11 02:31

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("teams", "0001_initial"),
        ("activities", "0001_initial"),
        ("academies", "0002_init_data"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="用户名",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="密码"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="邮箱"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="工作人员"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="超级用户"),
                ),
                (
                    "phone",
                    models.CharField(
                        default="", max_length=13, verbose_name="手机"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="创建时间"
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "nickname",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="昵称"
                    ),
                ),
                (
                    "degree",
                    models.IntegerField(
                        choices=[(0, "未知"), (1, "学士"), (2, "硕士"), (3, "博士")],
                        default=0,
                        verbose_name="学历",
                    ),
                ),
                ("grade", models.IntegerField(default=0, verbose_name="年级")),
                (
                    "introduction",
                    models.TextField(blank=True, verbose_name="个人简介"),
                ),
                (
                    "experience",
                    models.JSONField(default=list, verbose_name="经历"),
                ),
                (
                    "openid",
                    models.CharField(
                        max_length=64,
                        null=True,
                        unique=True,
                        verbose_name="微信openid",
                    ),
                ),
                (
                    "union_id",
                    models.UUIDField(
                        blank=True,
                        null=True,
                        unique=True,
                        verbose_name="自强union_id",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="姓名"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        default="user\\avatar\\default.jpg",
                        upload_to="user\\avatar",
                        verbose_name="头像",
                    ),
                ),
                (
                    "contact",
                    models.JSONField(default=list, verbose_name="联系方式"),
                ),
                (
                    "student_id",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="学号"
                    ),
                ),
                (
                    "academy",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_users",
                        to="academies.academy",
                        verbose_name="学院",
                    ),
                ),
                (
                    "favorite_activities",
                    models.ManyToManyField(
                        blank=True,
                        related_name="users",
                        to="activities.activity",
                        verbose_name="收藏的活动",
                    ),
                ),
                (
                    "favorite_teams",
                    models.ManyToManyField(
                        blank=True,
                        related_name="users",
                        to="teams.team",
                        verbose_name="收藏的队伍",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
                "db_table": "zq_user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
